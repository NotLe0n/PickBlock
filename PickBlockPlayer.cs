using System.Collections.Generic;
using Terraria.GameInput;
using Terraria;
using Terraria.ModLoader;

namespace PickBlock
{
    class PickBlockPlayer : ModPlayer
    {
        public static bool GiveItems;
        public override void ProcessTriggers(TriggersSet triggersSet)
        {
            if (Main.tile[(int)(Main.MouseWorld.X / 16f), (int)(Main.MouseWorld.Y / 16f)].active())
            {
                ushort TileID = Main.tile[(int)(Main.MouseWorld.X / 16f), (int)(Main.MouseWorld.Y / 16f)].type;
                ushort TileItemID = 0;
                List<ushort> TileItemIDs = new List<ushort> { 2, 3, 2, 62, 8, 9, 11, 12, 13, 14, 25, 25, 29, 31, 32, 34, 35, 33, 36, 94, 27, 48, 56, 2, 59, 61, 0, 63, 0, 83, 9, 0, 0, 105, 106, 1813, 1869, 116, 129, 131, 133, 134, 136, 137, 139, 141, 143, 145, 147, 148, 149, 150, 210, 169, 170, 171, 173, 172, 174, 176, 176, 195, 210, 177, 178, 179, 180, 181, 182, 0, 176, 183, 183, 62, 195, 192, 214, 221, 222, 224, 276, 275, 307, 313, 313, 321, 332, 333, 334, 335, 336, 337, 341, 2085, 352, 344,
                                                          345, 346, 347, 348, 349, 354, 355, 356, 359, 360, 363, 364, 365, 2, 369, 366, 370, 369, 398, 0, 408, 409, 412, 413, 414, 415, 416, 424, 480, 487, 488, 0, 498, 502, 511, 512, 513, 524, 525, 529, 538, 539, 540, 576, 577, 580, 581, 582, 583, 586, 591, 593, 594, 596, 604, 607, 609, 611, 612, 613, 614, 619, 620, 621, 662, 664, 664, 833, 834, 0, 699, 700, 701, 702, 1872, 1873, 2827, 714, 713, 717, 718, 719, 181, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                                          176, 751, 183, 9, 0, 762, 766, 763, 765, 767, 775, 2, 835, 0, 824, 836, 880, 0, 883, 909, 911, 928, 937, 937, 951, 965, 85, 966, 970, 995, 996, 997, 998, 1104, 1105, 1106, 1103, 1124, 1101, 1107, 1120, 1125, 1127, 0, 1150, 0, 1246, 1263, 1291, 1292, 0, 20, 1360, 1417, 1421, 1430, 1449, 1474, 1479, 1551, 1589, 1591, 1593, 1725, 1727, 1729, 1828, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1989,
                                                          1993, 2005, 1344, 2119, 2120, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 250, 2172, 2173, 2174, 2175, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2203, 2204, 2206, 2207, 2260, 2261, 2262, 2340, 2435, 2439, 2440, 2441, 2490, 2496, 2503, 2504, 2504, 2625, 2692, 2693, 2694, 2695, 2697, 71, 72, 73, 74, 2699, 2700, 2701, 2702, 2738, 2741, 2751, 2752, 2753, 2754,
                                                          2755, 2787, 2792, 2793, 2794, 470, 2860, 2868, 0, 2996, 2999, 3000, 3064, 3066, 3070, 3071, 3072, 3073, 3074, 3075, 3076, 3077, 3078, 3081, 3086, 3087, 3100, 3113, 3117, 3182, 3184, 3185, 2334, 3198, 3202, 3214, 3215, 0, 0, 620, 0, 3234, 3239, 3239, 3240, 3240, 3253, 3254, 3255, 3256, 3257, 3270, 3271, 3272, 3274, 3275, 3276, 3277, 3338, 3339, 3347, 3364, 3365, 3380, 3460, 3461, 3536, 3545, 3549, 3565, 3566, 3573, 3574, 3575, 3576,
                                                          3602, 3603, 3609, 3610, 3613, 3616, 3617, 3621, 3622, 3626, 3629, 3633, 3634, 3635, 3636, 3637, 3638, 3639, 3640, 3641, 3642, 3644, 3665, 3707, 3722, 0, 3725, 3736, 3737, 3738, 3739, 3740, 3741, 3742, 3743, 3746, 3747, 3748, 3749, 3754, 3755, 3756, 3782, 3795, 3813, 3814, 3815, 3816, 3884, 3886, 3920 };
                

                for (int i = 0; i < TileItemIDs.Count; i++)
                {
                    if (TileID == i)
                    {
                        TileItemID = TileItemIDs[i];
                    }
                }
                
                if (Main.mouseMiddle && Main.mouseMiddleRelease && TileItemID != 0)
                {
                    if (!player.HasItem(TileItemID) && GiveItems)
                    {
                        player.QuickSpawnItem(TileItemID, 999);
                    }
                    for (int i = 0; i < Main.maxInventory; i++)
                    {
                        if (player.inventory[i].type == TileItemID)
                        {
                            Utils.Swap(ref player.inventory[i], ref player.inventory[player.selectedItem]);
                        }
                    }
                }
            }
            if (!Main.tile[(int)(Main.MouseWorld.X / 16f), (int)(Main.MouseWorld.Y / 16f)].active())
            {
                ushort WallID = Main.tile[(int)(Main.MouseWorld.X / 16f), (int)(Main.MouseWorld.Y / 16f)].wall;
                short WallItemID = 0;

                List<short> WallItemIDs = new List<short> { 0, 26, 30, 26, 93, 130, 132, 135, 138, 140, 142, 144, 146, 0, 0, 0, 30, 135, 138, 140, 330, 392, 417, 418, 419, 420, 421, 479, 0, 587, 592, 595, 605, 606, 608, 610, 615, 616, 617, 618, 0, 622, 623, 624, 663, 720, 721, 722, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3584, 0, 0, 745, 746, 747, 745, 746, 747, 0, 0, 0, 750, 752, 764, 768, 769, 770, 1723, 0, 0, 0, 825, 0, 884, 927, 0, 0, 1267, 1268, 1269, 1270, 1271, 1272, 0, 0, 0, 0, 0, 0,
                                                            1378, 1379, 1380, 1381, 1382, 1383, 1447, 1448, 1126, 1590, 1592, 1594, 1102, 1726, 1728, 1730, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2158, 2159, 2160, 2169, 2170, 2210, 2211, 2212, 2213, 2263, 2264, 2271, 2333, 2432, 2433, 2434, 2505, 2507, 2506, 2508, 2677, 2679, 2681, 2683, 2678, 2680, 2682, 2684, 2686, 2688, 2690, 2685, 2687, 2690, 2691, 2696, 2698, 0, 0, 2788, 
                                                            2789, 2790, 2791, 2861, 3067, 3082, 3083, 3088, 3089, 3101, 3082, 3088, 0, 3238, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3348, 3472, 3751, 3752, 3753, 3760, 3761, 3762 };

                for (int i = 0; i < WallItemIDs.Count; i++)
                {
                    if (WallID == i)
                    {
                        WallItemID = WallItemIDs[i];
                    }
                }

                if (Main.mouseMiddle && Main.mouseMiddleRelease && WallItemID != 0)
                {
                    if (!player.HasItem(WallItemID) && GiveItems)
                    {
                        player.QuickSpawnItem(WallItemID, 999);
                    }
                    for (int i = 0; i < Main.maxInventory; i++)
                    {
                        if (player.inventory[i].type == WallItemID)
                        {
                            Utils.Swap(ref player.inventory[i], ref player.inventory[player.selectedItem]);
                        }
                    }
                }
            }
        }
    }
}